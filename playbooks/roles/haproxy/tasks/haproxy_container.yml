---
######################################################
############## Setup HAProxy container ##############
######################################################

# Depending on the OS there may already be a httpd running
- name: 'Check if pre-existing httpd service exists'
  stat: 'path=/etc/init.d/httpd'
  register: 'service_status'

- name: 'Disable local http server'
  service:
    name: 'httpd'
    enabled: no
    state: 'stopped'
  when: 'service_status.stat.exists'

- name: 'Create new directory'
  file:
    path: '{{ item }}'
    state: directory
  with_items:
    - "{{ rocknsm_dir }}/haproxy"
    - "{{ rocknsm_dir }}/CA"
    - "{{ rocknsm_dir }}/CA/certs"
    - "{{ rocknsm_dir }}/CA/crl"
    - "{{ rocknsm_dir }}/CA/csr"
    - "{{ rocknsm_dir }}/CA/private"

- name: 'Pull official haproxy from docker hub'
  docker_image:
    name: 'haproxy:latest'
    state: present
  when: rock_online_install

- name: 'Install haproxy service file'
  template: 
    src: 'haproxy.service.j2' 
    dest: '/etc/systemd/system/haproxy.service' 
    mode: 0644 
    owner: root 
    group: root
  notify: reload systemd  

- name: 'Copy haproxy compose file'
  template:
    src: 'haproxy-compose.yml.j2'
    dest: "{{ rocknsm_dir }}/haproxy/haproxy-compose.yml"
    mode: 0644
    owner: root
    group: root

- name: 'Copy haproxy.conf file'
  template:
    src: 'haproxy.conf.j2'
    dest: "{{ rocknsm_dir }}/haproxy/haproxy.conf"
    mode: 0644
    owner: root
    group: root

- name: 'Copy openssl.cnf file'
  template:
    src: 'openssl.cnf.j2'
    dest: "{{ rocknsm_dir }}/CA/openssl.cnf"
    mode: 0644
    owner: root
    group: root

- name: 'Generate Root CA'
  shell: |
    rm -f {{ rocknsm_dir }}/CA/index.txt
    touch {{ rocknsm_dir }}/CA/index.txt
    echo 1000 > serial
    openssl genrsa -out {{ rocknsm_dir }}/CA/private/ca.key 2048
    chmod 400 {{ rocknsm_dir }}/CA/private/ca.key
    openssl req -config {{ rocknsm_dir}}/CA/openssl.cnf -key {{ rocknsm_dir }}/CA/private/ca.key -new -x509 -days 365 -sha256 -extensions v3_ca -out {{ rocknsm_dir }}/CA/certs/ca.crt -subj /CN=RockNSM-CA
    chmod 444 {{ rocknsm_dir }}/CA/certs/ca.crt

- name: 'Generate haproxy SSL keys'
  shell: |
    openssl genrsa -out {{ rocknsm_dir }}/CA/private/haproxy.key 2048
    openssl req -config {{ rocknsm_dir }}/CA/openssl.cnf -key {{ rocknsm_dir }}/CA/private/haproxy.key -new -sha256 -out {{ rocknsm_dir }}/CA/csr/haproxy.csr -subj /CN=haproxy.lan
    openssl ca -batch -config {{ rocknsm_dir }}/CA/openssl.cnf -extensions server_cert -days 365 -notext -md sha256 -in {{ rocknsm_dir }}/CA/csr/haproxy.csr -out {{ rocknsm_dir }}/CA/certs/haproxy.crt
    cat {{ rocknsm_dir }}/CA/certs/haproxy.crt > {{ rocknsm_dir }}/CA/private/haproxy.pem
    cat {{ rocknsm_dir }}/CA/private/haproxy.key >> {{ rocknsm_dir }}/CA/private/haproxy.pem

- name: 'Generate sensor SSL client keys'
  shell: |
    openssl genrsa -out {{ rocknsm_dir }}/CA/private/{{ item }}.key 2048
    openssl req -new -key {{ rocknsm_dir }}/CA/private/{{ item }}.key -out {{ rocknsm_dir }}/CA/csr/{{ item }}.csr -subj /CN=US
    openssl ca -batch -config {{ rocknsm_dir }}/CA/openssl.cnf -extensions usr_cert -days 365 -notext -md sha256 -in {{ rocknsm_dir }}/CA/csr/{{ item }}.csr -out {{ rocknsm_dir }}/CA/certs/{{ item }}.crt
    cat {{ rocknsm_dir }}/CA/certs/{{ item }}.crt > {{ rocknsm_dir }}/CA/private/{{ item }}.pem
    cat {{ rocknsm_dir }}/CA/private/{{ item }}.key >> {{ rocknsm_dir }}/CA/private/{{ item }}.pem
  with_items: "{{ groups['sensors'] }}"

- name: 'Run haproxy-compose.yml' 
  docker_service: 
    project_src: "{{ rocknsm_dir }}/haproxy/" 
    files: 'haproxy-compose.yml' 
    state: present 

- name: 'Enable haproxy service'
  service: 
    name: 'haproxy'
    enabled: yes
...

