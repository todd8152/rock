  ######################################################
  ################# Setup PulledPork  ##################
  ######################################################
- name: Create pulledpork directory symlink
  file:
    src: "/opt/pulledpork-{{ pulledpork_release }}"
    dest: "/opt/pulledpork"
    state: link
    force: yes
  when: included_components.pulledpork.enabled

- name: Set pulledpork executable
  file:
    path: /opt/pulledpork/pulledpork.pl
    mode: 0755
    owner: root
    group: root
  when: included_components.pulledpork.enabled

- name: Create pulledpork config dir
  file:
    path: /etc/pulledpork
    mode: 0755
    owner: root
    group: root
    state: directory
  when: included_components.pulledpork.enabled

- name: Configure pulledpork
  template:
    src: templates/pulledpork.conf.j2
    dest: /etc/pulledpork/pulledpork.conf
    owner: root
    group: root
    mode: 0644
  when: included_components.pulledpork.enabled

- name: Check stats of rules files
  stat:
    path: "{{ pulledpork_engine_basepath }}/rules/pulledpork.rules"
  register: rules_file
  when: included_components.pulledpork.enabled

- name: Create initial pulledpork rules-related files
  file:
    path: "{{ pulledpork_engine_basepath }}/rules/pulledpork.rules"
    owner: root
    group: root
    mode: 0644
    state: touch
  when: included_components.pulledpork.enabled and not rules_file.stat.exists

- name: Schedule pulledpork to run daily
  cron:
    name: "pulledpork update"
    cron_file: rocknsm_pulledpork
    user: root
    hour: "12"
    minute: "0"
    job: /opt/pulledpork/pulledpork.pl
      -c /etc/pulledpork/pulledpork.conf
      -l > /var/log/pulledpork.log 2>&1;
      {{ "/usr/bin/systemctl kill -s USR2 suricata;" if included_components.suricata.enabled else None }}
      {{ "/usr/bin/systemctl restart snortd;" if included_components.snort.enabled else None }}
  when: included_components.pulledpork.enabled
